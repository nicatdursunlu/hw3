{"version":3,"sources":["context/products.jsx","context/theme.jsx","context/cart.jsx","context/favorites.jsx","commons/Header.jsx","commons/Layout.jsx","pages/Homepage/components/SingleProductsListItem.jsx","pages/Homepage/components/ProductsList.jsx","pages/Homepage/components/SingleProduct.jsx","pages/Homepage/components/ProductsViewSwitcher.jsx","pages/Homepage/index.jsx","pages/Cart/index.jsx","pages/Favorites/index.jsx","App.js","serviceWorker.js","index.js"],"names":["productsContext","createContext","ProductsContextProvider","children","useState","products","data","setData","console","log","getData","url","a","fetch","response","json","newData","useEffect","Provider","value","ThemeContext","ThemeContextProvider","view","setView","changeView","viewType","CartContext","initialState","cartProducts","cartReducer","state","type","payLoad","filter","p","uniqueLocalId","CartContextProvider","useReducer","dispatch","addToCart","product","Date","now","removeFromCart","FavoriteContext","favoriteProducts","FavoriteContextProvider","addToFavorites","removeFromFavorites","Header","useContext","Container","StyledNavLink","to","length","styled","header","NavLink","Layout","Content","Footer","div","main","footer","SingleProductsListItem","image","name","price","id","className","alt","src","Cart","Link","ProductsList","Lists","map","item","key","SingleProduct","push","history","match","params","productsList","find","Popup","Close","onClick","Image","border","color","desc","Button","StyledLink","Star","img","css","button","ProductsViewSwitcher","Homepage","path","component","CartDescription","Favorites","App","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e92b693.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\r\nimport { BrouserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nexport const productsContext = createContext();\r\n\r\nexport const ProductsContextProvider = ({ children }) => {\r\n\r\n  // const [products, setProducts] = useState([]);\r\n\r\n  // const getProducts = async () => {\r\n  //     const res = await fetch('http://localhost:3000/products');\r\n  //     const data = await res.json();\r\n  //     setProducts(data);\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //     getProducts();\r\n  // }, [])\r\n\r\n  const [data, setData] = useState({ products: [] });\r\n  console.log(data);\r\n\r\n  const getData = async (url) => {\r\n    const response = await fetch(url);\r\n    const newData = await response.json();\r\n    setData(data => ({\r\n      ...newData,\r\n      products: [...data.products, ...newData.products]\r\n    }));\r\n    console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData('./products.json')\r\n    // getData('./../public/products.json')\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <productsContext.Provider value={data.products}>\r\n      {children}\r\n    </productsContext.Provider>\r\n  )\r\n}","import React, { useContext, useState, createContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeContextProvider = ({ children }) => {\r\n    \r\n    const [view, setView] = useState('grid');\r\n    const changeView = (viewType) => setView(viewType);\r\n    \r\n    return(\r\n        <ThemeContext.Provider value={{\r\n            view,\r\n            changeView\r\n        }}>\r\n            { children }\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React, { createContext, useReducer } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cartProducts: [] };\r\n\r\nfunction cartReducer (state, { type, payLoad }) {\r\n    switch(type) {\r\n        case 'add_to_cart':\r\n            return { cartProducts: [...state.cartProducts, payLoad] }\r\n        case 'remove_from_cart':\r\n            return { cartProducts: state.cartProducts.filter(p => p.uniqueLocalId !== payLoad) }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const CartContextProvider = ({ children }) => {\r\n    \r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n    const addToCart = product => {\r\n        dispatch({\r\n            type: 'add_to_cart',\r\n            payLoad: { ...product, uniqueLocalId: Date.now() }\r\n        })\r\n    }\r\n\r\n    const removeFromCart = uniqueLocalId => {\r\n        dispatch({\r\n            type: 'remove_from_cart',\r\n            payLoad: uniqueLocalId\r\n        })\r\n    }\r\n\r\n    return(\r\n        <CartContext.Provider value={{...state, addToCart, removeFromCart}}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}","import React, { createContext, useReducer } from 'react';\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nconst initialState = { favoriteProducts: [] };\r\n\r\nfunction cartReducer (state, { type, payLoad }) {\r\n    switch(type) {\r\n        case 'add_to_favorites':\r\n            return { favoriteProducts: [...state.favoriteProducts, payLoad] }\r\n        case 'remove_from_favorites':\r\n            return { favoriteProducts: state.favoriteProducts.filter(p => p.uniqueLocalId !== payLoad) }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const FavoriteContextProvider = ({ children }) => {\r\n    \r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n    const addToFavorites = product => {\r\n        dispatch({\r\n            type: 'add_to_favorites',\r\n            payLoad: { ...product, uniqueLocalId: Date.now() }\r\n        })\r\n    }\r\n\r\n    const removeFromFavorites = uniqueLocalId => {\r\n        dispatch({\r\n            type: 'remove_from_favorites',\r\n            payLoad: uniqueLocalId\r\n        })\r\n    }\r\n\r\n    return(\r\n        <FavoriteContext.Provider value={{...state, addToFavorites, removeFromFavorites}}>\r\n            {children}\r\n        </FavoriteContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { CartContext } from '../context/cart';\r\nimport { FavoriteContext } from '../context/favorites';\r\n\r\nexport const Header = () => {\r\n\r\n    const {cartProducts} = useContext(CartContext);\r\n    const {favoriteProducts} = useContext(FavoriteContext);\r\n\r\n    return(\r\n        <Container>\r\n            <StyledNavLink to=\"/products\">Products</StyledNavLink>\r\n            <StyledNavLink to=\"/cart\">\r\n                Cart ({cartProducts.length})\r\n            </StyledNavLink>\r\n            <StyledNavLink to=\"/favorites\">\r\n                Favorites ({favoriteProducts.length})\r\n            </StyledNavLink>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.header`\r\n    padding: 20px;\r\n    text-align: center;\r\n    border-bottom: 1px solid lightgrey;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n    width: 30%;\r\n    border: 2px solid lightgrey;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    color: black;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    font-size: 14px;\r\n    transition: all .3s ease;\r\n    font-weight: bold;\r\n\r\n    &.active {\r\n        border-color: blue;\r\n        color: black;\r\n    }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Header} from './Header';\r\n\r\nexport const Layout = ({children}) => {\r\n    return(\r\n        <Container>\r\n            <Header/>\r\n            <Content>\r\n                {children}\r\n            </Content>\r\n            <Footer>\r\n                &copy; Copyright 2020\r\n            </Footer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n`\r\n\r\nconst Content = styled.main`\r\n    flex-grow: 1;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n    padding: 15px;\r\n    background: black;\r\n    color: white;\r\n    text-align: center;\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const SingleProductsListItem = ({image, name, price, id, view}) => {\r\n    return(\r\n        <Cart to={`/products/${id}`} className={`product-card-list-item--${view}`}>\r\n            <img alt={name} src={image} />\r\n            <h4>{name}</h4>\r\n            <h3>${price}</h3>\r\n        </Cart>\r\n    )\r\n}\r\n\r\nconst Cart = styled(Link)`\r\n    width: calc((100% - 60px) / 3);\r\n    margin: 0 10px 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.2);\r\n    padding: 15px;\r\n    color: black;\r\n    text-decoration: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 150px;\r\n        border-radius: 10px;\r\n        object-fit: contain;\r\n    }\r\n\r\n    &.product-card-list-item--list {\r\n        width: calc(100% - 20px);\r\n        img{\r\n            width: 100px;\r\n            height: 100px;\r\n        }\r\n    }\r\n    \r\n`","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { productsContext } from '../../../context/products';\r\nimport { ThemeContext } from '../../../context/theme';\r\n\r\nimport {SingleProductsListItem} from './SingleProductsListItem';\r\n\r\nexport const ProductsList = () => {\r\n\r\n    const products = useContext(productsContext);\r\n    const { view } = useContext(ThemeContext);\r\n \r\n    return(\r\n\r\n        <Lists>\r\n            {products.map(item =>(\r\n                <SingleProductsListItem\r\n                    view={view}\r\n                    key={item.id}\r\n                    {...item}\r\n                />\r\n            ))}\r\n            \r\n        </Lists>\r\n    )\r\n}\r\n\r\nconst Lists = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 20px -10px;\r\n`","import React, {useContext} from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {productsContext} from '../../../context/products';\r\nimport { CartContext } from '../../../context/cart'\r\n\r\nimport { IoIosStar } from \"react-icons/io\";\r\nimport { FavoriteContext } from '../../../context/favorites';\r\n\r\nexport const SingleProduct = ({ history: { push }, match: { params: { id } } }) => {\r\n\r\n    const productsList = useContext(productsContext);\r\n    const { addToCart } = useContext(CartContext);\r\n    const { addToFavorites } = useContext(FavoriteContext);\r\n\r\n    const product = productsList.find(item => item.id == id);\r\n\r\n    return(\r\n        <Container>\r\n            {product && (\r\n                <Popup>\r\n                    <Close onClick={() => push('/products')}>X</Close>\r\n                    <Image border={product.color} src={product.image} alt={product.name} />\r\n                    <h1>{product.name}</h1>\r\n                    <h2>${product.price}</h2>\r\n                    <p>{product.desc}</p>\r\n                    <Button onClick={() => addToCart(product)}>Add to cart</Button>\r\n                    <StyledLink onClick={() => addToFavorites(product)}>\r\n                        <IoIosStar/>\r\n                        <IoIosStar/>\r\n                        <IoIosStar/>\r\n                        <IoIosStar/>\r\n                        <Star><IoIosStar/></Star>\r\n                    </StyledLink>\r\n                </Popup>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    background: rgba(0,0,0,0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    z-index: 1000;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\nconst Popup = styled.div`\r\n    width: 96%;\r\n    padding: 40px;\r\n    text-align: center;\r\n    max-width: 600px;\r\n    color: black;\r\n    border-radius: 15px;\r\n    background: white;\r\n    position: relative;\r\n`\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    width: 100px;\r\n    height: 100px;\r\n    margin: 0 auto;\r\n    object-fit: cover;\r\n    border-radius: 100%;\r\n\r\n    ${p => p.border && css`\r\n        border: 2px solid ${p.border}\r\n    `}\r\n`\r\n\r\nconst Close = styled.button`\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100%;\r\n    background: red;\r\n    color: white;\r\n    border: none;\r\n    position: absolute;\r\n    top: -15px;\r\n    right: -15px;\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding: 5px 10px;\r\n    margin-right: 100px;\r\n    background: black;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n    text-transform: uppercase;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: #C72E2E;\r\n    font-size: 20px;\r\n`\r\n\r\nconst Star = styled(Link)`\r\n    color: black;\r\n    font-size: 20px;\r\n`","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ThemeContext } from '../../../context/theme';\r\n\r\nexport const ProductsViewSwitcher = () => {\r\n\r\n    const { view, changeView } = useContext(ThemeContext);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Button\r\n                className={view === 'grid' ? 'active' : ''}\r\n                onClick={() => changeView('grid')}>Grid view</Button>\r\n            <Button\r\n                className={view === 'list' ? 'active' : ''}\r\n                onClick={() => changeView('list')}>List view</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    margin: 20px 0;\r\n`\r\n\r\nconst Button = styled.button`\r\n    width: 50%;\r\n    border: 2px solid lightgrey;\r\n    border-radius: 10px;\r\n    background: white;\r\n    padding: 8px 15px;\r\n    transition: all .3s ease;\r\n    text-transform: uppercase; \r\n    cursor: pointer;\r\n    color: black;\r\n    font-weight: bold;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &.active {\r\n        border-color: blue;\r\n    }\r\n`\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport { Layout } from  '../../commons';\r\nimport { ProductsList, SingleProduct, ProductsViewSwitcher } from './components';\r\n\r\nexport const Homepage = () => {\r\n    return(\r\n        <Layout>\r\n            <h1>Homepage</h1>\r\n            <ProductsViewSwitcher/>\r\n            <ProductsList/>\r\n            <Route path=\"/products/:id\" component={SingleProduct} />\r\n        </Layout>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Layout } from '../../commons';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { CartContext } from '../../context/cart';\r\n\r\n\r\nexport const Cart = () => {\r\n\r\n    const {cartProducts, removeFromCart} = useContext(CartContext);\r\n\r\n    return(\r\n        <Layout>\r\n            <h1>Cart</h1>\r\n            {cartProducts.length == 0 ? \r\n                (<h2>Cart is empty</h2>)\r\n            :\r\n            cartProducts.map(({ uniqueLocalId, name, price, image, desc }) => (\r\n                <Container key={ uniqueLocalId }>\r\n                    <img src={image} alt={name} />\r\n                    <CartDescription>\r\n                        <h3>{name} -- ${price}</h3>\r\n                        <p>{desc}</p>            \r\n                        <Button onClick={() => removeFromCart(uniqueLocalId)}>Remove From Cart</Button>\r\n                    </CartDescription>\r\n                </Container>\r\n            ))}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 520px;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin-right: 10px;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n    text-decoration: none;\r\n    display: flex;\r\n    margin-bottom: 40px;\r\n\r\n    img {\r\n        width: 180px;\r\n        height: 120px;\r\n        padding-right: 80px;\r\n        border-radius: 5px;\r\n    }\r\n`\r\n\r\nconst CartDescription = styled.div`\r\n\r\n`\r\n\r\nconst Button  = styled.button`\r\n    padding: 5px 10px;\r\n    background: red;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n    text-transform: uppercase;\r\n`","import React, { useContext } from 'react';\r\nimport { Layout } from '../../commons';\r\nimport styled from 'styled-components';\r\n\r\nimport { FavoriteContext } from '../../context/favorites';\r\n\r\nexport const Favorites = () => {\r\n\r\n    const {favoriteProducts, removeFromFavorites} = useContext(FavoriteContext);\r\n\r\n    return(\r\n        <Layout>\r\n            <h1>Favorites</h1>\r\n            {favoriteProducts.length == 0 ?\r\n                (<h2>Favorites is empty</h2>)\r\n            :\r\n            favoriteProducts.map(({ uniqueLocalId, name, price, image, desc }) => (\r\n                <Container key={ uniqueLocalId }>\r\n                    <img src={image} alt={name} />\r\n                    <CartDescription>\r\n                        <h3>{name} -- ${price}</h3>\r\n                        <p>{desc}</p>            \r\n                        <Button onClick={() => removeFromFavorites(uniqueLocalId)}>Remove From Favorites</Button>\r\n                    </CartDescription>\r\n                </Container>\r\n            ))}\r\n        </Layout>     \r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 520px;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin-right: 10px;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\r\n    text-decoration: none;\r\n    display: flex;\r\n    margin-bottom: 40px;\r\n\r\n    img {\r\n        width: 180px;\r\n        height: 120px;\r\n        padding-right: 80px;\r\n        border-radius: 5px;\r\n    }\r\n`\r\n\r\nconst CartDescription = styled.div`\r\n\r\n`\r\n\r\nconst Button  = styled.button`\r\n    padding: 5px 10px;\r\n    background: red;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n    text-transform: uppercase;\r\n`","import React, { useContext } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { ProductsContextProvider } from './context/products';\r\nimport { ThemeContextProvider } from './context/theme';\r\nimport { CartContextProvider } from './context/cart';\r\nimport { FavoriteContextProvider } from './context/favorites';\r\n\r\nimport {\r\n  Homepage,\r\n  Cart,\r\n  Favorites\r\n} from './pages';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <ProductsContextProvider>\r\n        <ThemeContextProvider>\r\n          <CartContextProvider>\r\n            <FavoriteContextProvider>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Homepage} />\r\n                <Route path=\"/products\" component={Homepage} />\r\n                <Route path=\"/cart\" component={Cart} />\r\n                <Route path=\"/favorites\" component={Favorites} />\r\n              </Switch>\r\n            </FavoriteContextProvider>\r\n          </CartContextProvider>\r\n        </ThemeContextProvider>\r\n      </ProductsContextProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './styles.sass';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}